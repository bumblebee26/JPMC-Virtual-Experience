From e6b509ca077705231e2031ab8e7d5569936d768a Mon Sep 17 00:00:00 2001
From: Viren Baria <virenbaria17@gmail.com>
Date: Sat, 23 May 2020 16:15:53 +0530
Subject: [PATCH] Create Patch File

---
 0001-Create-Patch-File.patch | 124 +++++++++++++++++++++++++++++++++++
 client_test.py               |  24 +++++++
 2 files changed, 148 insertions(+)
 create mode 100644 0001-Create-Patch-File.patch

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..e5d68c1
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,124 @@
+From 54ea4384f8e712ed6ac4c8ef5a66271024c64c09 Mon Sep 17 00:00:00 2001
+From: Viren Baria <virenbaria17@gmail.com>
+Date: Sat, 23 May 2020 16:05:29 +0530
+Subject: [PATCH] Create Patch File
+
+---
+ .vscode/settings.json              |   3 +++
+ __pycache__/client3.cpython-37.pyc | Bin 0 -> 1130 bytes
+ client3.py                         |  10 +++++++---
+ client_test.py                     |  11 ++++++-----
+ 4 files changed, 16 insertions(+), 8 deletions(-)
+ create mode 100644 .vscode/settings.json
+ create mode 100644 __pycache__/client3.cpython-37.pyc
+
+diff --git a/.vscode/settings.json b/.vscode/settings.json
+new file mode 100644
+index 0000000..227fec2
+--- /dev/null
++++ b/.vscode/settings.json
+@@ -0,0 +1,3 @@
++{
++    "python.pythonPath": "C:\\Users\\viren\\Anaconda3\\python.exe"
++}
+\ No newline at end of file
+diff --git a/__pycache__/client3.cpython-37.pyc b/__pycache__/client3.cpython-37.pyc
+new file mode 100644
+index 0000000000000000000000000000000000000000..5e92592ae19302e3e31b16a3ce790c74d8502ef5
+GIT binary patch
+literal 1130
+zcmYjQ&2Jk;6rb6hU9S^6lzf|B2BZosktV2@$SSlnDMd&`X{%B(GOX4+&&f9HU1w%o
+zHD+@%NB#)s$iKmf69<lS<<vVDIPrFzRLtmo&Aff{-tWDA)NU^kT;Kik`;Wgh3Hhrw
+zZWh|)A(H+RnIw|tL{KL^;W_CG-$^Ez^h6+i5lSY5pNVM5P&QCT(3H`cr~Y{J3oOAh
+zgflv$hvbJ!w7{RYfxcRqzX!qm7O*+HB3JZ^&fl-4Sj~u7d$SL#=)EV_p#keN+Gk=z
+zY>F+h4co8=8}|uxWD_=E6SiP`$TrE0QgU9stk0Jqf;G9^A;?=DGV`u)k6vOe&q=ra
+z7V9EM(+^LL8TWQ~^D<5H(^8w>{@(uH?)e1N#e+<K{?ldlHzg!Raw|a2kPeXaLu3`k
+z>yS%oYR&5q>Emnk(sMR@XZw{``CCK=x5*`|Xl+$&$S{*|+T+Knl#>*AlIOe}a&rp2
+z0FWU0>m;9m=BDH)P=HDdI&qnpWL##2;Wp5wOwVk?l;e1iNgIq+mcqhL^x0bvQ|wY3
+z4D&KE-M|LtlhS~yk8Kk_h!_4%^j)Z`uI^W&mQnos;Goxkp+V{X>r6q>KP=P92nwV7
+zPcrlMWYGWS_}haW1L^6G!3aB_?Tjz(_0v2<pL=)57q)c*<`A<zcG+S`?MBXz=q=nW
+zs@iy#*4fmnmNhwW*HNjcq&Pq=={-kyD|(wCVE*(Y{sat1FtW0S%asr(JSpV0KH#cu
+z*paKE>xss-%Z)N{7Yo)xM;l?D&+2$xv~-A!u!u6MR@`kIkCLp2<LSpwYxpF;qj_TZ
+zCkSBgj{cNm?M}L9Q0q=37Y+Ta|K+0t>mNS;s{4UhnW#L^26q+UfN3Mbg>9M1Mj+TL
+zT^1r#SVuV$!P6IypM7uXk;CX+B1JNSIJPXqF4_QnPr%aH2H0PzMdK!N10$DXC~P<^
+z)hIERDM+LZUHi2NU8Y(^Se_dORsZm+ZjKuOH%Eo}A58T;s0CK{M>wrHe6fK?nj?#-
+X+dlJ|7d3JFtCahUE@6)&y6yc3#E&7F
+
+literal 0
+HcmV?d00001
+
+diff --git a/client3.py b/client3.py
+index f1771c3..bc6d382 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,14 +35,16 @@ def getDataPoint(quote):
+ 	stock = quote['stock']
+ 	bid_price = float(quote['top_bid']['price'])
+ 	ask_price = float(quote['top_ask']['price'])
+-	price = bid_price
++	price = (bid_price + ask_price)/2
+ 	return stock, bid_price, ask_price, price
+ 
+ def getRatio(price_a, price_b):
+ 	""" Get ratio of price_a and price_b """
+ 	""" ------------- Update this function ------------- """
+ 	""" Also create some unit tests for this function in client_test.py """
+-	return 1
++	if (price_b == 0):
++		return
++	return price_a/price_b
+ 
+ # Main
+ if __name__ == "__main__":
+@@ -52,8 +54,10 @@ if __name__ == "__main__":
+ 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+ 		""" ----------- Update to get the ratio --------------- """
++		prices = {}
+ 		for quote in quotes:
+ 			stock, bid_price, ask_price, price = getDataPoint(quote)
++			prices[stock] = price
+ 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-		print ("Ratio %s" % getRatio(price, price))
++		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
+\ No newline at end of file
+diff --git a/client_test.py b/client_test.py
+index af2bf26..675751f 100644
+--- a/client_test.py
++++ b/client_test.py
+@@ -1,5 +1,5 @@
+ import unittest
+-from client3 import getDataPoint
++from client3 import getDataPoint, getRatio
+ 
+ class ClientTest(unittest.TestCase):
+   def test_getDataPoint_calculatePrice(self):
+@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+     quotes = [
+@@ -15,11 +17,10 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
+-
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+   """ ------------ Add more unit tests ------------ """
+ 
+-
+-
+ if __name__ == '__main__':
+-    unittest.main()
++    unittest.main()
+\ No newline at end of file
+-- 
+2.24.1.windows.2
+
diff --git a/client_test.py b/client_test.py
index 675751f..2655ce9 100644
--- a/client_test.py
+++ b/client_test.py
@@ -21,6 +21,30 @@ class ClientTest(unittest.TestCase):
       self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_priceBZero(self):
+    price_a = 119.2
+    price_b = 0
+    self.assertIsNone(getRatio(price_a, price_b))
+ 
+  def test_getRatio_priceAZero(self):
+    price_a = 0
+    price_b = 121.68
+    self.assertEqual(getRatio(price_a, price_b), 0)
+
+  def test_getRatio_greaterThan1(self):
+    price_a = 346.48
+    price_b = 166.39
+    self.assertGreater(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_LessThan1(self):
+    price_a = 166.39
+    price_b = 356.48
+    self.assertLess(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_exactlyOne(self):
+    price_a = 356.48
+    price_b = 356.48
+    self.assertEqual(getRatio(price_a, price_b), 1)
 
 if __name__ == '__main__':
     unittest.main()
\ No newline at end of file
-- 
2.24.1.windows.2

